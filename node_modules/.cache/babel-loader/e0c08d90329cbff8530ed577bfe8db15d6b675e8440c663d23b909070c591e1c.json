{"ast":null,"code":"var _jsxFileName = \"/home/lcom/Project/food-mall/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport Nav from \"./components/NavBar/Nav\";\nimport AppBody from \"./components/Body/AppBody\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataStore = /*#__PURE__*/React.createContext({\n  cardOpen: false,\n  cardOrder: false,\n  onCloseCard: () => {},\n  myOrderCount: () => {},\n  myOrder: [],\n  onsetMyOrder: () => {},\n  addFoodCard: false\n});\nfunction App() {\n  _s();\n  const [myOrder, setMyOrder] = useState([]);\n  const [cardOpen, setCardOpen] = useState(false);\n  const [cardOrder, setCardOrder] = useState(false);\n  const [addFoodCard, setaddFoodCard] = useState(false);\n  const onCloseCard = val => {\n    setCardOpen(val);\n  };\n  const myOrderCount = OrderCount => {\n    setCardOrder(OrderCount);\n  };\n  const onsetMyOrder = newOrder => {\n    myOrder.map((check, i) => {\n      if (check.id === newOrder.id && newOrder[\"true\"]) {\n        if (check.count === 1 && newOrder[\"min\"]) {\n          myOrder.splice(i, 1);\n        }\n        if (check.count > 0 && newOrder[\"min\"]) {\n          check.count += -1;\n          check.price = check.orignalPrice * check.count;\n        } else if (newOrder[\"plus\"]) {\n          check.count += +1;\n          check.price = check.orignalPrice * check.count;\n        }\n        newOrder = {\n          id: \"true\"\n        };\n      } else if (check.id === newOrder.id) {\n        check.price = check.orignalPrice * check.count;\n        check.count += newOrder.count;\n        newOrder = {\n          id: \"true\"\n        };\n      }\n      return 0;\n    });\n    newOrder.id.includes(\"true\") ? setMyOrder([...myOrder]) : setMyOrder([...myOrder, newOrder]);\n  };\n  const clearMyOrders = () => {\n    setMyOrder([]);\n  };\n  const onClickFoodCard = () => {\n    setaddFoodCard(va);\n  };\n  // console.log(\"App.jsx\");\n  return /*#__PURE__*/_jsxDEV(DataStore.Provider, {\n    value: {\n      cardOpen: cardOpen,\n      cardOrder: cardOrder,\n      onCloseCard: onCloseCard,\n      myOrderCount: myOrderCount,\n      myOrder: myOrder,\n      onsetMyOrder: onsetMyOrder,\n      clearMyOrders: clearMyOrders\n    },\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBody, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9g6IhKPUu1q3OVUPoMVPidpXzz0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Nav","AppBody","DataStore","createContext","cardOpen","cardOrder","onCloseCard","myOrderCount","myOrder","onsetMyOrder","addFoodCard","App","setMyOrder","setCardOpen","setCardOrder","setaddFoodCard","val","OrderCount","newOrder","map","check","i","id","count","splice","price","orignalPrice","includes","clearMyOrders","onClickFoodCard","va"],"sources":["/home/lcom/Project/food-mall/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Nav from \"./components/NavBar/Nav\";\nimport AppBody from \"./components/Body/AppBody\";\nexport const DataStore = React.createContext({\n  cardOpen: false,\n  cardOrder: false,\n  onCloseCard: () => {},\n  myOrderCount: () => {},\n  myOrder: [],\n  onsetMyOrder: () => {},\n  addFoodCard : false,\n\n});\nfunction App() {\n  const [myOrder, setMyOrder] = useState([]);\n  const [cardOpen, setCardOpen] = useState(false);\n  const [cardOrder, setCardOrder] = useState(false);\n  const [addFoodCard, setaddFoodCard] = useState(false);\n\n  const onCloseCard = (val) => {\n    setCardOpen(val);\n  };\n\n  const myOrderCount = (OrderCount) => {\n    setCardOrder(OrderCount);\n  };\n  const onsetMyOrder = (newOrder) => {\n    myOrder.map((check, i) => {\n      if (check.id === newOrder.id && newOrder[\"true\"]) {\n        if (check.count === 1 && newOrder[\"min\"]) {\n          myOrder.splice(i, 1);\n        }\n\n        if (check.count > 0 && newOrder[\"min\"]) {\n          check.count += -1;\n          check.price = check.orignalPrice * check.count;\n        } else if (newOrder[\"plus\"]) {\n          check.count += +1;\n          check.price = check.orignalPrice * check.count;\n        }\n        newOrder = { id: \"true\" };\n      } else if (check.id === newOrder.id) {\n        check.price = check.orignalPrice * check.count;\n        check.count += newOrder.count;\n        newOrder = { id: \"true\" };\n      }\n      return 0;\n    });\n    newOrder.id.includes(\"true\")\n      ? setMyOrder([...myOrder])\n      : setMyOrder([...myOrder, newOrder]);\n  };\n  const clearMyOrders = () => {\n    setMyOrder([]);\n  };\n  const onClickFoodCard = () => {\n      setaddFoodCard(va)\n  }\n  // console.log(\"App.jsx\");\n  return (\n    <DataStore.Provider\n      value={{\n        cardOpen: cardOpen,\n        cardOrder: cardOrder,\n        onCloseCard: onCloseCard,\n        myOrderCount: myOrderCount,\n        myOrder: myOrder,\n        onsetMyOrder: onsetMyOrder,\n        clearMyOrders: clearMyOrders,\n      }}\n    >\n      <Nav />\n      <AppBody />\n    </DataStore.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}