{"ast":null,"code":"var _jsxFileName = \"/home/lcom/Project/food-mall/src/components/Context/Data-Store.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataStore = /*#__PURE__*/React.createContext();\nexport function DataStoreProvider(props) {\n  _s();\n  const ctx = useContext(DataStore);\n  const [myOrder, setMyOrder] = useState([]);\n  const [cardOpen, setCardOpen] = useState(false);\n  const [cardOrder, setCardOrder] = useState(false);\n  const onCloseCard = val => {\n    setCardOpen(val);\n  };\n  const myOrderCount = OrderCount => {\n    setCardOrder(OrderCount);\n  };\n  const onsetMyOrder = newOrder => {\n    myOrder.map((check, i) => {\n      if (check.id === newOrder.id && newOrder['true']) {\n        if (check.count === 1) {\n          myOrder.splice(i, 1);\n        }\n        if (check.count > 0 && newOrder['min']) {\n          check.count += -1;\n          check.price = check.orignalPrice * check.count;\n        } else if (newOrder['plus']) {\n          check.count += +1;\n          check.price = check.orignalPrice * check.count;\n        }\n        newOrder = {\n          id: 'true'\n        };\n      } else if (check.id === newOrder.id) {\n        check.price += newOrder.price;\n        check.count += newOrder.count;\n        newOrder = {\n          id: 'true'\n        };\n      }\n      return 0;\n    });\n    newOrder.id.includes('true') ? setMyOrder([...myOrder]) : setMyOrder([...myOrder, newOrder]);\n  };\n  return /*#__PURE__*/_jsxDEV(DataStore.Provider, {\n    value: {\n      cardOpen: cardOpen,\n      cardOrder: cardOrder,\n      onCloseCard: onCloseCard,\n      myOrderCount: myOrderCount\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(DataStoreProvider, \"vrJrOQrYseo17jvicYu/uP4/uAE=\");\n_c = DataStoreProvider;\nexport default DataStore;\nvar _c;\n$RefreshReg$(_c, \"DataStoreProvider\");","map":{"version":3,"names":["React","useState","DataStore","createContext","DataStoreProvider","props","ctx","useContext","myOrder","setMyOrder","cardOpen","setCardOpen","cardOrder","setCardOrder","onCloseCard","val","myOrderCount","OrderCount","onsetMyOrder","newOrder","map","check","i","id","count","splice","price","orignalPrice","includes","children"],"sources":["/home/lcom/Project/food-mall/src/components/Context/Data-Store.jsx"],"sourcesContent":["import React, { useState } from 'react'\nexport const DataStore = React.createContext();\n\nexport function DataStoreProvider(props) {\n    const ctx = useContext(DataStore)\n    const [myOrder , setMyOrder] = useState([]);  \n    const [cardOpen, setCardOpen] = useState(false);\n  const [cardOrder, setCardOrder] = useState(false);\n  const onCloseCard = (val) => {\n    setCardOpen(val);\n  };\n\n  const myOrderCount = (OrderCount) => {\n    setCardOrder(OrderCount);\n  };\n    const onsetMyOrder = (newOrder) => {\n       myOrder.map((check , i ) => {\n        if(check.id === newOrder.id && newOrder['true']){\n          if(check.count === 1){\n               myOrder.splice(i,1)\n          }\n\n          if(check.count > 0 && newOrder['min']){\n              check.count += -1\n              check.price = check.orignalPrice * check.count\n          }else if(newOrder['plus']){\n              check.count += +1 \n              check.price = check.orignalPrice * check.count\n          }\n          newOrder = {id : 'true'}\n        }\n        else if(check.id === newOrder.id){\n          check.price += newOrder.price\n          check.count += newOrder.count\n          newOrder = {id : 'true'}\n        }\n        return 0 \n      })\n      newOrder.id.includes('true') ? setMyOrder([...myOrder]) : setMyOrder([...myOrder , newOrder])\n    }\n  return (\n    <DataStore.Provider value={{\n        cardOpen : cardOpen,\n        cardOrder : cardOrder,\n        onCloseCard : onCloseCard,\n        myOrderCount : myOrderCount,\n    }}>{props.children}</DataStore.Provider>)\n}\n\nexport default DataStore"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AACvC,OAAO,MAAMC,SAAS,gBAAGF,KAAK,CAACG,aAAa,EAAE;AAE9C,OAAO,SAASC,iBAAiB,CAACC,KAAK,EAAE;EAAA;EACrC,MAAMC,GAAG,GAAGC,UAAU,CAACL,SAAS,CAAC;EACjC,MAAM,CAACM,OAAO,EAAGC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMa,WAAW,GAAIC,GAAG,IAAK;IAC3BJ,WAAW,CAACI,GAAG,CAAC;EAClB,CAAC;EAED,MAAMC,YAAY,GAAIC,UAAU,IAAK;IACnCJ,YAAY,CAACI,UAAU,CAAC;EAC1B,CAAC;EACC,MAAMC,YAAY,GAAIC,QAAQ,IAAK;IAChCX,OAAO,CAACY,GAAG,CAAC,CAACC,KAAK,EAAGC,CAAC,KAAM;MAC3B,IAAGD,KAAK,CAACE,EAAE,KAAKJ,QAAQ,CAACI,EAAE,IAAIJ,QAAQ,CAAC,MAAM,CAAC,EAAC;QAC9C,IAAGE,KAAK,CAACG,KAAK,KAAK,CAAC,EAAC;UAChBhB,OAAO,CAACiB,MAAM,CAACH,CAAC,EAAC,CAAC,CAAC;QACxB;QAEA,IAAGD,KAAK,CAACG,KAAK,GAAG,CAAC,IAAIL,QAAQ,CAAC,KAAK,CAAC,EAAC;UAClCE,KAAK,CAACG,KAAK,IAAI,CAAC,CAAC;UACjBH,KAAK,CAACK,KAAK,GAAGL,KAAK,CAACM,YAAY,GAAGN,KAAK,CAACG,KAAK;QAClD,CAAC,MAAK,IAAGL,QAAQ,CAAC,MAAM,CAAC,EAAC;UACtBE,KAAK,CAACG,KAAK,IAAI,CAAC,CAAC;UACjBH,KAAK,CAACK,KAAK,GAAGL,KAAK,CAACM,YAAY,GAAGN,KAAK,CAACG,KAAK;QAClD;QACAL,QAAQ,GAAG;UAACI,EAAE,EAAG;QAAM,CAAC;MAC1B,CAAC,MACI,IAAGF,KAAK,CAACE,EAAE,KAAKJ,QAAQ,CAACI,EAAE,EAAC;QAC/BF,KAAK,CAACK,KAAK,IAAIP,QAAQ,CAACO,KAAK;QAC7BL,KAAK,CAACG,KAAK,IAAIL,QAAQ,CAACK,KAAK;QAC7BL,QAAQ,GAAG;UAACI,EAAE,EAAG;QAAM,CAAC;MAC1B;MACA,OAAO,CAAC;IACV,CAAC,CAAC;IACFJ,QAAQ,CAACI,EAAE,CAACK,QAAQ,CAAC,MAAM,CAAC,GAAGnB,UAAU,CAAC,CAAC,GAAGD,OAAO,CAAC,CAAC,GAAGC,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAGW,QAAQ,CAAC,CAAC;EAC/F,CAAC;EACH,oBACE,QAAC,SAAS,CAAC,QAAQ;IAAC,KAAK,EAAE;MACvBT,QAAQ,EAAGA,QAAQ;MACnBE,SAAS,EAAGA,SAAS;MACrBE,WAAW,EAAGA,WAAW;MACzBE,YAAY,EAAGA;IACnB,CAAE;IAAA,UAAEX,KAAK,CAACwB;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAsB;AAC5C;AAAC,GA5CezB,iBAAiB;AAAA,KAAjBA,iBAAiB;AA8CjC,eAAeF,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}