{"ast":null,"code":"var _jsxFileName = \"/home/lcom/Project/food-mall/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { use } from \"react\";\nimport Nav from \"./components/NavBar/Nav\";\nimport AppBody from \"./components/Body/AppBody\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataStore = /*#__PURE__*/React.createContext();\nfunction App() {\n  _s();\n  const [myOrder, setMyOrder] = useState([]);\n  const [cardOpen, setCardOpen] = useState(false);\n  const [cardOrder, setCardOrder] = useState(false);\n  const onCloseCard = val => {\n    setCardOpen(val);\n  };\n  const myOrderCount = OrderCount => {\n    setCardOrder(OrderCount);\n  };\n  const onsetMyOrder = newOrder => {\n    myOrder.map((check, i) => {\n      if (check.id === newOrder.id && newOrder['true']) {\n        if (check.count === 1) {\n          myOrder.splice(i, 1);\n        }\n        if (check.count > 0 && newOrder['min']) {\n          check.count += -1;\n          check.price = check.orignalPrice * check.count;\n        } else if (newOrder['plus']) {\n          check.count += +1;\n          check.price = check.orignalPrice * check.count;\n        }\n        newOrder = {\n          id: 'true'\n        };\n      } else if (check.id === newOrder.id) {\n        check.price += newOrder.price;\n        check.count += newOrder.count;\n        newOrder = {\n          id: 'true'\n        };\n      }\n      return 0;\n    });\n    newOrder.id.includes('true') ? setMyOrder([...myOrder]) : setMyOrder([...myOrder, newOrder]);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBody, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6ypJ/FO0sA+fRvSqwn0ZKjyLNrY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","use","Nav","AppBody","DataStore","createContext","App","myOrder","setMyOrder","useState","cardOpen","setCardOpen","cardOrder","setCardOrder","onCloseCard","val","myOrderCount","OrderCount","onsetMyOrder","newOrder","map","check","i","id","count","splice","price","orignalPrice","includes"],"sources":["/home/lcom/Project/food-mall/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React , { use} from \"react\";\nimport Nav from \"./components/NavBar/Nav\";\nimport AppBody from \"./components/Body/AppBody\";\nexport const DataStore = React.createContext();\nfunction App() {\n\n   const [myOrder , setMyOrder] = useState([]);  \n    const [cardOpen, setCardOpen] = useState(false);\n    const [cardOrder, setCardOrder] = useState(false);\n    const onCloseCard = (val) => {\n    setCardOpen(val);\n  };\n\n  const myOrderCount = (OrderCount) => {\n    setCardOrder(OrderCount);\n  };\n    const onsetMyOrder = (newOrder) => {\n       myOrder.map((check , i ) => {\n        if(check.id === newOrder.id && newOrder['true']){\n          if(check.count === 1){\n               myOrder.splice(i,1)\n          }\n\n          if(check.count > 0 && newOrder['min']){\n              check.count += -1\n              check.price = check.orignalPrice * check.count\n          }else if(newOrder['plus']){\n              check.count += +1 \n              check.price = check.orignalPrice * check.count\n          }\n          newOrder = {id : 'true'}\n        }\n        else if(check.id === newOrder.id){\n          check.price += newOrder.price\n          check.count += newOrder.count\n          newOrder = {id : 'true'}\n        }\n        return 0 \n      })\n      newOrder.id.includes('true') ? setMyOrder([...myOrder]) : setMyOrder([...myOrder , newOrder])\n    }\n\n  return (\n    <React.Fragment>\n      <Nav />\n      <AppBody />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAKC,GAAG,QAAO,OAAO;AAClC,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,OAAO,MAAM,2BAA2B;AAAC;AAChD,OAAO,MAAMC,SAAS,gBAAGJ,KAAK,CAACK,aAAa,EAAE;AAC9C,SAASC,GAAG,GAAG;EAAA;EAEZ,MAAM,CAACC,OAAO,EAAGC,UAAU,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMK,WAAW,GAAIC,GAAG,IAAK;IAC7BJ,WAAW,CAACI,GAAG,CAAC;EAClB,CAAC;EAED,MAAMC,YAAY,GAAIC,UAAU,IAAK;IACnCJ,YAAY,CAACI,UAAU,CAAC;EAC1B,CAAC;EACC,MAAMC,YAAY,GAAIC,QAAQ,IAAK;IAChCZ,OAAO,CAACa,GAAG,CAAC,CAACC,KAAK,EAAGC,CAAC,KAAM;MAC3B,IAAGD,KAAK,CAACE,EAAE,KAAKJ,QAAQ,CAACI,EAAE,IAAIJ,QAAQ,CAAC,MAAM,CAAC,EAAC;QAC9C,IAAGE,KAAK,CAACG,KAAK,KAAK,CAAC,EAAC;UAChBjB,OAAO,CAACkB,MAAM,CAACH,CAAC,EAAC,CAAC,CAAC;QACxB;QAEA,IAAGD,KAAK,CAACG,KAAK,GAAG,CAAC,IAAIL,QAAQ,CAAC,KAAK,CAAC,EAAC;UAClCE,KAAK,CAACG,KAAK,IAAI,CAAC,CAAC;UACjBH,KAAK,CAACK,KAAK,GAAGL,KAAK,CAACM,YAAY,GAAGN,KAAK,CAACG,KAAK;QAClD,CAAC,MAAK,IAAGL,QAAQ,CAAC,MAAM,CAAC,EAAC;UACtBE,KAAK,CAACG,KAAK,IAAI,CAAC,CAAC;UACjBH,KAAK,CAACK,KAAK,GAAGL,KAAK,CAACM,YAAY,GAAGN,KAAK,CAACG,KAAK;QAClD;QACAL,QAAQ,GAAG;UAACI,EAAE,EAAG;QAAM,CAAC;MAC1B,CAAC,MACI,IAAGF,KAAK,CAACE,EAAE,KAAKJ,QAAQ,CAACI,EAAE,EAAC;QAC/BF,KAAK,CAACK,KAAK,IAAIP,QAAQ,CAACO,KAAK;QAC7BL,KAAK,CAACG,KAAK,IAAIL,QAAQ,CAACK,KAAK;QAC7BL,QAAQ,GAAG;UAACI,EAAE,EAAG;QAAM,CAAC;MAC1B;MACA,OAAO,CAAC;IACV,CAAC,CAAC;IACFJ,QAAQ,CAACI,EAAE,CAACK,QAAQ,CAAC,MAAM,CAAC,GAAGpB,UAAU,CAAC,CAAC,GAAGD,OAAO,CAAC,CAAC,GAAGC,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAGY,QAAQ,CAAC,CAAC;EAC/F,CAAC;EAEH,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA,QAAG,eACP,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAErB;AAAC,GA5CQb,GAAG;AAAA,KAAHA,GAAG;AA8CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}